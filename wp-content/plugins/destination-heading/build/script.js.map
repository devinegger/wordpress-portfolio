{"version":3,"file":"script.js","mappings":";;;;;AAAA,MAAMA,MAAM,GAAG,CACb,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,SAAS,EACT,YAAY,EACZ,gBAAgB,CACjB;AAEDC,MAAM,CAACC,gBAAgB,CAAE,kBAAkB,EAAE,MAAM;EAEjD;EACA,SAASC,UAAUA,CAAA,EAAG;IACpB,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,MAAM,CAACQ,MAAM,CAAC;IACzD,OAAOR,MAAM,CAACI,SAAS,CAAC;EAC1B;;EAIA;EACA,SAASK,QAAQA,CAAA,EAAG;IAClB,IAAIC,OAAO,GAAGP,UAAU,CAAC,CAAC;IAC1B,OAAOQ,WAAW,KAAKD,OAAO,EAAE;MAC9BA,OAAO,GAAGP,UAAU,CAAC,CAAC;IACxB;IACAQ,WAAW,GAAGD,OAAO;IACrB,OAAOC,WAAW;EACpB;;EAEA;EACA,MAAMC,eAAe,GAAGC,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;EACzD;EACA,IAAIH,WAAW,GAAGR,UAAU,CAAC,CAAC;EAC9BS,eAAe,CAACG,SAAS,GAAGJ,WAAW;;EAEvC;EACA;EACA;EACA;EACAK,WAAW,CAAC,MAAM;IAChBJ,eAAe,CAACK,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IACrCC,UAAU,CAAC,MAAM;MACfP,eAAe,CAACG,SAAS,GAAGN,QAAQ,CAAC,CAAC;MACtCG,eAAe,CAACK,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;MACtCN,eAAe,CAACK,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC;IAC1C,CAAC,EAAE,GAAG,CAAC;IACPD,UAAU,CAAC,MAAM;MACfP,eAAe,CAACK,SAAS,CAACG,MAAM,CAAC,OAAO,CAAC;IAC3C,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,IAAI,CAAC;AACV,CAAE,CAAC,C","sources":["webpack://destination-heading/./src/script.js"],"sourcesContent":["const cities = [\n  \"dallas\",\n  \"sante fe\",\n  \"sacramento\",\n  \"phoenix\",\n  \"des moines\",\n  \"travelers rest\",\n];\n\nwindow.addEventListener( 'DOMContentLoaded', () => {\n\n  // return a random city (string) from the cities array\n  function randomCity() {\n    let cityIndex = Math.floor(Math.random() * cities.length);\n    return cities[cityIndex];\n  }\n\n\n\n  // swap the current city with a new random city, making sure that it's not the same\n  function swapCity() {\n    let newCity = randomCity();\n    while (currentCity === newCity) {\n      newCity = randomCity();\n    }\n    currentCity = newCity;\n    return currentCity;\n  }\n\n  // grab container for the animating random city\n  const citiesContainer = document.querySelector('.cities');\n  // set initial random city and apply it to the cities container\n  let currentCity = randomCity();\n  citiesContainer.innerHTML = currentCity;\n\n  // add class for animating out,\n  // swap city text,\n  // add class for animating back in,\n  // then remove animation classes\n  setInterval(() => {\n    citiesContainer.classList.add(\"exit\");\n    setTimeout(() => {\n      citiesContainer.innerHTML = swapCity();\n      citiesContainer.classList.add(\"enter\");\n      citiesContainer.classList.remove(\"exit\");\n    }, 300);\n    setTimeout(() => {\n      citiesContainer.classList.remove(\"enter\");\n    }, 800);\n  }, 2000);\n} );\n\n\n\n\n\n\n"],"names":["cities","window","addEventListener","randomCity","cityIndex","Math","floor","random","length","swapCity","newCity","currentCity","citiesContainer","document","querySelector","innerHTML","setInterval","classList","add","setTimeout","remove"],"sourceRoot":""}